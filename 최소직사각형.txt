가장 긴 가로 길이와 세로 길이가 각각 80, 70이기 때문에 80(가로) x 70(세로) 크기의 지갑을 만들면 모든 명함들을 수납할 수 있습니다. 하지만 2번 명함을 가로로 눕혀 수납한다면 80(가로) x 50(세로) 크기의 지갑으로 모든 명함들을 수납할 수 있습니다. 이때의 지갑 크기는 4000(=80 x 50)입니다.

모든 명함의 가로 길이와 세로 길이를 나타내는 2차원 배열 sizes가 매개변수로 주어집니다. 모든 명함을 수납할 수 있는 가장 작은 지갑을 만들 때, 지갑의 크기를 return 하도록 solution 함수를 완성해주세요.

<결과 코드> print(sizes) 해보면 
def solution(sizes):
    w = 0
    h = 0
    for i in range(len(sizes)):
        if max(sizes[i][0],h) * max(sizes[i][1],w) < max(sizes[i][0],w) * max(sizes[i][1],h):
            w = max(sizes[i][1], w)
            h = max(sizes[i][0], h)
        else:
            w = max(sizes[i][0],w)
            h = max(sizes[i][1],h)
    answer = w * h
    
       
    # 각각 곱한 값보다 크거나 같으면서 곱한 것이 가장 최소값
    # 가로 세로가 바뀔 수도 있다는 것을 생각
    
    return answer